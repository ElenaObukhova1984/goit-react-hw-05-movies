{"version":3,"file":"static/js/691.953aa9cc.chunk.js","mappings":"2SAEaA,EAAOC,EAAAA,GAAAA,KAAH,6CAIJC,EAAQD,EAAAA,GAAAA,MAAH,4MAYLE,EAASF,EAAAA,GAAAA,OAAH,yEAKNG,EAAOH,EAAAA,GAAAA,GAAH,qEAKJI,EAAOJ,EAAAA,GAAAA,GAAH,mE,kBCgDjB,EArEe,WAAO,IAAD,EACnB,GAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAOd,sGAEIR,GAAa,GAFjB,SAG8BS,EAAAA,GAA2BL,GAHzD,iBAGYM,EAHZ,EAGYA,SACCC,OAAS,EACdb,GAAU,OAAIY,IAAWE,EAAAA,GAAAA,MAAA,2DAC6BR,EAD7B,MAI7BJ,GAAa,GATjB,kDAWIY,EAAAA,GAAAA,MAAY,sCAXhB,2DAPc,sBACA,KAAVR,GADU,mCAwBdS,EACD,GAAE,CAACT,IAUJ,OACE,iCACE,UAACd,EAAD,CAAMwB,SAVW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACff,EAAgB,CAAEC,MAAOa,EAAKE,SAASf,MAAMgB,QAC7CH,EAAKI,QACLvB,EAAU,GACX,EAIG,WACE,SAACN,EAAD,CAAO8B,KAAK,OAAOC,KAAK,WACxB,SAAC9B,EAAD,CAAQ6B,KAAK,SAAb,wBAGF,SAAC5B,EAAD,UACGG,GACCA,EAAO2B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,SAAC/B,EAAD,WACE,SAAC,KAAD,CAAMgC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMvB,GAA1C,SACGoB,KAFMD,EADF,MAQd1B,IAAa,SAAC+B,EAAA,EAAD,KACd,SAAC,KAAD,MAGL,C,+LClCK5B,EAAe,IAAI6B,gBAAgB,CACvCC,QAAS,qCAGXC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAQ,mCAAG,sGACCD,EAAAA,EAAAA,IAAA,8BAAiC/B,IADlC,uBACdiC,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qDAKRC,EAAY,mCAAG,WAAMX,GAAN,yFACHQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,YAA0BvB,IADvB,uBAClBiC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZE,EAAW,mCAAG,WAAMZ,GAAN,yFACFQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,oBAAkCvB,IADhC,uBACjBiC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXG,EAAc,mCAAG,WAAMb,GAAN,yFACLQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,oBAAkCvB,IAD7B,uBACpBiC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAgB,mCAAG,WAAMnC,GAAN,yFACP6B,EAAAA,EAAAA,IAAA,wBACJ/B,EADI,4DAC4DE,IAFrD,uBACtB+B,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 12px;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 14px;\n  width: 240px;\n  border: 1px solid #ccc;\n  &:hover,\n  :focus {\n    outline: 0;\n    border-color: transparent;\n    box-shadow: 0 0 3px #81c9e1;\n  }\n`;\n\nexport const Button = styled.button`\n  border: 1px solid #ccc;\n  font-weight:900px;\n`;\n\nexport const List = styled.ul`\n  margin-left: 14px;\n  list-style: circle;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n  margin-bottom: 5px;\n`;","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport * as moviesAPI from 'service/api';\nimport { Form, Input, Button, List, Item } from './Movies.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [titles, setTitles] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n   \n\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const { results } = await moviesAPI.getMoviesByQuery(query);\n         results.length > 0\n          ? setTitles([...results]): toast.error(\n              `Sorry! We couldn't find any movies by your query ${query}!`\n          );\n\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Not found! Please try again!');\n       \n       \n      }\n    }\n\n    getMovies();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n    setTitles([]);\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      \n      <List>\n        {titles &&\n          titles.map(({ id, title }) => (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </Item>\n          ))}\n      </List>\n      {isLoading && <Loader />}\n      <Toaster />\n    </>\n  );\n};\n\n\n\nexport default Movies;","import axios from \"axios\";\n\n// const API_KEY = 'ee39ca8cad92a8b09ec7ae8a83a29296';\n// axios.defaults.baseURL = 'https://www.themoviedb.org/3/';\n\n// // axios.defaults.params = {\n\n// // };ee39ca8cad92a8b09ec7ae8a83a29296\n\n\n// export const getMovie = async () => {\n//   const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n//        return data;\n    \n// };\n\n// export const getMovieById = async id => {\n//   const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getCastById = async id => {\n//   const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getReviewsById = async id => {\n//   const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getMoviesByQuery = async query => {\n//   const { data } = await axios.get(\n//     `search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=false`\n//   );\n//   return data;\n// };\n\nconst searchParams = new URLSearchParams({\n  api_key: 'ee39ca8cad92a8b09ec7ae8a83a29296',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovie = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};"],"names":["Form","styled","Input","Button","List","Item","useState","titles","setTitles","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","moviesAPI","results","length","toast","getMovies","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","map","id","title","to","state","from","Loader","URLSearchParams","api_key","axios","getMovie","data","getMovieById","getCastById","getReviewsById","getMoviesByQuery"],"sourceRoot":""}