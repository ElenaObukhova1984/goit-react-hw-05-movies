{"version":3,"file":"static/js/244.92d325af.chunk.js","mappings":"mSAEaA,EAAOC,EAAAA,GAAAA,GAAH,8CAIJC,EAAOD,EAAAA,GAAAA,GAAH,mEAKJE,EAASF,EAAAA,GAAAA,EAAH,+GAONG,EAASH,EAAAA,GAAAA,EAAH,4CAINI,EAAWJ,EAAAA,GAAAA,EAAH,yF,SCkCrB,EAhDgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WAAM,wCAGd,sGAEIH,GAAa,GAFjB,SAG8BI,EAAAA,GAAyBH,GAHvD,gBAGYI,EAHZ,EAGYA,QAERP,EAAWO,GACXL,GAAa,GANjB,kDAQGM,EAAAA,GAAAA,MAAY,sCARf,2DAHc,uBAAC,WAAD,wBAedC,EACD,GAAE,CAACN,KAGF,gCAEGJ,GAAWA,EAAQW,OAAS,IAC3B,SAAClB,EAAD,UACGO,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACpB,EAAD,YACE,UAACC,EAAD,sBAAiBiB,MACjB,SAAChB,EAAD,UAASiB,MAFAC,EADA,MAQG,IAAnBf,EAAQW,SACP,SAACb,EAAD,sDAEDI,IAAa,SAACc,EAAA,EAAD,MAGnB,C,+LCdKC,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAGXC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAQ,mCAAG,sGACCD,EAAAA,EAAAA,IAAA,8BAAiCH,IADlC,uBACdK,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qDAKRC,EAAY,mCAAG,WAAMR,GAAN,yFACHK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,YAA0BE,IADvB,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZE,EAAW,mCAAG,WAAMT,GAAN,yFACFK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,oBAAkCE,IADhC,uBACjBK,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXG,EAAc,mCAAG,WAAMV,GAAN,yFACLK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,oBAAkCE,IAD7B,uBACpBK,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAgB,mCAAG,WAAMC,GAAN,yFACPP,EAAAA,EAAAA,IAAA,wBACJH,EADI,4DAC4DU,IAFrD,uBACtBL,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: 25px;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n\nexport const Author = styled.p`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nexport const Review = styled.p`\n  font-size: 14px;\n`;\n\nexport const NoReview = styled.p`\n  margin-top: 15px;\n  margin-bottom: 10px;\n  font-size: 14px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nimport * as moviesAPI from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { List, Item, Author, Review, NoReview } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n \n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    \n\n    async function getReviews() {\n      try {\n        setIsLoading(true);\n        const { results } = await moviesAPI.getReviewsById(movieId);\n\n        setReviews(results);\n        setIsLoading(false);\n      } catch (error) {\n       toast.error('Oops! Not found! Please try again!');\n      }\n    }\n\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      \n      {reviews && reviews.length > 0 && (\n        <List>\n          {reviews.map(({ author, content, id }) => (\n            <Item key={id}>\n              <Author>Author: {author}</Author>\n              <Review>{content}</Review>\n            </Item>\n          ))}\n        </List>\n      )}\n      {reviews.length === 0 && (\n        <NoReview>We dont have any reviews for this movie</NoReview>\n      )}\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\n\n\nexport default Reviews;","import axios from \"axios\";\n\n// const API_KEY = 'ee39ca8cad92a8b09ec7ae8a83a29296';\n// axios.defaults.baseURL = 'https://www.themoviedb.org/3/';\n\n// // axios.defaults.params = {\n\n// // };ee39ca8cad92a8b09ec7ae8a83a29296\n\n\n// export const getMovie = async () => {\n//   const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n//        return data;\n    \n// };\n\n// export const getMovieById = async id => {\n//   const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getCastById = async id => {\n//   const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getReviewsById = async id => {\n//   const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getMoviesByQuery = async query => {\n//   const { data } = await axios.get(\n//     `search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=false`\n//   );\n//   return data;\n// };\n\nconst searchParams = new URLSearchParams({\n  api_key: 'ee39ca8cad92a8b09ec7ae8a83a29296',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovie = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};"],"names":["List","styled","Item","Author","Review","NoReview","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","moviesAPI","results","toast","getReviews","length","map","author","content","id","Loader","searchParams","URLSearchParams","api_key","axios","getMovie","data","getMovieById","getCastById","getReviewsById","getMoviesByQuery","query"],"sourceRoot":""}