{"version":3,"file":"static/js/257.987ca714.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","service/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Button = styled(Link)`\n  display: inline-block;\n  padding: 4px 10px;\n  margin-left: 4px;\n  margin-bottom: 2px;\n  border-radius: 2px;\n  border: 1px solid #9a8e8e;\n  color: #2c2a2a;\n  font-size: 14px;\n  font-weight:700;\n  text-decoration: none;\n  background-color:#d3cfcf;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  padding-bottom: 5px;\n  margin-bottom: 14px;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const ImageHolder = styled.div`\n  padding: 2px;\n  width: 30vw;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n`;\n\nexport const InfoHolder = styled.div`\n  padding: 10px;\n  width: 70vw;\n`;\n\nexport const Title = styled.p`\n  margin-bottom: 14px;\n  margin-top: 14px;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const Score = styled.p`\n  margin-bottom: 14px;\n  font-size: 14px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 14px;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 14px;\n  font-size: 14px;\n`;\n\nexport const Genres = styled.p`\n  margin-bottom: 14px;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nexport const ListGenres = styled.ul`\n  display: flex;\n  list-style: none;\n`;\n\nexport const ItemGenre = styled.li`\n  margin-right: 5px;\n  font-size: 14px;\n`;\n\nexport const AddInfo = styled.p`\n  margin-bottom: 14px;\n  margin-left: 5px;\n  font-size: 14px;\n`;\n\nexport const List = styled.ul`\n  border-bottom: 1px solid #ccc;\n  padding-bottom: 14px;\n`;\n\nexport const Item = styled.li`\n  margin-left: 24px;\n  font-size: 14px;\n  margin-bottom: 5px;\n`;","import { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport * as moviesAPI from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\n\nimport {\n  Button, Image, Container, ImageHolder, InfoHolder, Title, Score, Overview, Text, Genres, AddInfo, List, Item, ListGenres, ItemGenre,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [poster, setPoster] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n   \n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const result = await moviesAPI.getMovieById(movieId);\n        setMovie(result);\n        \n        if (result.poster_path !== null) {\n          setPoster(`http://image.tmdb.org/t/p/w780/${result.poster_path}`);\n        }\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Not found! Please try again!');\n      }\n    }\n\n    getMovies();\n  }, [movieId]);\n  const { title, vote_average, overview, genres } = movie;\n  const userScore = (vote_average * 100 / 10).toFixed();\n  return (\n    <>\n      <>\n        <Button to={backLinkHref.current}>Go back</Button>\n        <Container>\n          <ImageHolder>\n            <Image src={`${poster}`} alt=\"poster\" />\n          </ImageHolder>\n          <InfoHolder>\n            <Title>{title}</Title>\n            <Score>User Score: {userScore}%</Score>\n            <Overview>Overview</Overview>\n            <Text>{overview}</Text>\n            <Genres>Genres</Genres>\n            <ListGenres>\n              {genres && genres.map(({ id, name }) => (\n                <ItemGenre key={id}>{name}</ItemGenre>\n              ))}\n            </ListGenres>\n          </InfoHolder>\n        </Container>\n        <AddInfo>Additional information</AddInfo>\n        <List>\n          <Item>\n            <Link to=\"cast\">Cast</Link>\n          </Item>\n          <Item>\n            <Link to=\"reviews\">Reviews</Link>\n          </Item>\n        </List>\n      </>\n      \n      <Suspense fallback={<Loader />}>\n      <Outlet />\n      </Suspense>\n      {isLoading && <Loader />}\n      <Toaster />\n    </>\n  );\n}\n\n\nexport default MovieDetails;","import axios from \"axios\";\n\n// const API_KEY = 'ee39ca8cad92a8b09ec7ae8a83a29296';\n// axios.defaults.baseURL = 'https://www.themoviedb.org/3/';\n\n// // axios.defaults.params = {\n\n// // };ee39ca8cad92a8b09ec7ae8a83a29296\n\n\n// export const getMovie = async () => {\n//   const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n//        return data;\n    \n// };\n\n// export const getMovieById = async id => {\n//   const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getCastById = async id => {\n//   const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getReviewsById = async id => {\n//   const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getMoviesByQuery = async query => {\n//   const { data } = await axios.get(\n//     `search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=false`\n//   );\n//   return data;\n// };\n\nconst searchParams = new URLSearchParams({\n  api_key: 'ee39ca8cad92a8b09ec7ae8a83a29296',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovie = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};"],"names":["Button","styled","Link","Container","ImageHolder","Image","InfoHolder","Title","Score","Overview","Text","Genres","ListGenres","ItemGenre","AddInfo","List","Item","useState","movie","setMovie","isLoading","setIsLoading","poster","setPoster","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","moviesAPI","result","poster_path","toast","getMovies","title","vote_average","overview","genres","userScore","toFixed","to","current","src","alt","map","id","name","Suspense","fallback","Loader","searchParams","URLSearchParams","api_key","axios","getMovie","data","getMovieById","getCastById","getReviewsById","getMoviesByQuery","query"],"sourceRoot":""}