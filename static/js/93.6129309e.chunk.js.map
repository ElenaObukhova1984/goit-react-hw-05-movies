{"version":3,"file":"static/js/93.6129309e.chunk.js","mappings":"iSAEaA,EAAOC,EAAAA,GAAAA,GAAH,oEAKJC,EAAOD,EAAAA,GAAAA,GAAH,mEAKJE,EAAQF,EAAAA,GAAAA,IAAH,mFAMLG,EAAOH,EAAAA,GAAAA,EAAH,oEAKJI,EAAYJ,EAAAA,GAAAA,EAAH,oE,SCiCtB,EAjDa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAGQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WAAM,wCACX,sGAECH,GAAa,GAFd,SAGwBI,EAAAA,GAAsBH,GAH9C,gBAGSJ,EAHT,EAGSA,KACRC,EAAQD,GACRG,GAAa,GALd,kDAQEK,EAAAA,GAAAA,MAAY,sCARd,2DADW,uBAAC,WAAD,wBAcdC,EACD,GAAE,CAACL,KAGF,iCAEE,SAACX,EAAD,UACGO,GAAQA,EAAKU,OAAS,GACrBV,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,GAAIC,EAA3B,EAA2BA,UAA3B,OACP,UAACpB,EAAD,WACoB,OAAjBkB,IACC,SAACjB,EAAD,CACEoB,IAAG,yCAAoCH,GACvCI,IAAI,UAGR,SAACpB,EAAD,UAAOe,KACP,UAACd,EAAD,yBAAuBiB,OARdD,EADJ,MAadZ,IAAa,SAACgB,EAAA,EAAD,MAGjB,C,+LCdKC,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,qCAGXC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAQ,mCAAG,sGACCD,EAAAA,EAAAA,IAAA,8BAAiCH,IADlC,uBACdK,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qDAKRC,EAAY,mCAAG,WAAMX,GAAN,yFACHQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,YAA0BK,IADvB,uBAClBK,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZE,EAAW,mCAAG,WAAMZ,GAAN,yFACFQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,oBAAkCK,IADhC,uBACjBK,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXG,EAAc,mCAAG,WAAMb,GAAN,yFACLQ,EAAAA,EAAAA,IAAA,iBAAoBR,EAApB,oBAAkCK,IAD7B,uBACpBK,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAgB,mCAAG,WAAMC,GAAN,yFACPP,EAAAA,EAAAA,IAAA,wBACJH,EADI,4DAC4DU,IAFrD,uBACtBL,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 15px;\n  padding-left: 25px;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 10vw;\n  margin-bottom: 10px;\n`;\n\nexport const Name = styled.p`\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const Character = styled.p`\n  font-size: 14px;\n  margin-bottom: 10px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport * as moviesAPI from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { List, Item, Image, Name, Character } from '../Cast/Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n       async function getCast() {\n      try {\n        setIsLoading(true);\n        const { cast } = await moviesAPI.getCastById(movieId);\n        setCast(cast);\n        setIsLoading(false);\n        \n      } catch (error) {\n         toast.error('Oops! Not found! Please try again!');\n        \n      }\n    }\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      \n      <List>\n        {cast && cast.length > 0 &&\n          cast.map(({ name, profile_path, id, character }) => (\n            <Item key={id}>\n              {profile_path !== null && (\n                <Image\n                  src={`http://image.tmdb.org/t/p/w780/${profile_path}`}\n                  alt=\"foto\"\n                />\n              )}\n              <Name>{name}</Name>\n              <Character>Character: {character}</Character>\n            </Item>\n          ))}\n      </List>\n    {isLoading && <Loader />}  \n    </>\n  );\n};\n\n\n\nexport default Cast;","import axios from \"axios\";\n\n// const API_KEY = 'ee39ca8cad92a8b09ec7ae8a83a29296';\n// axios.defaults.baseURL = 'https://www.themoviedb.org/3/';\n\n// // axios.defaults.params = {\n\n// // };ee39ca8cad92a8b09ec7ae8a83a29296\n\n\n// export const getMovie = async () => {\n//   const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n//        return data;\n    \n// };\n\n// export const getMovieById = async id => {\n//   const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getCastById = async id => {\n//   const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getReviewsById = async id => {\n//   const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n//   return data;\n// };\n\n// export const getMoviesByQuery = async query => {\n//   const { data } = await axios.get(\n//     `search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=false`\n//   );\n//   return data;\n// };\n\nconst searchParams = new URLSearchParams({\n  api_key: 'ee39ca8cad92a8b09ec7ae8a83a29296',\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovie = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};"],"names":["List","styled","Item","Image","Name","Character","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","moviesAPI","toast","getCast","length","map","name","profile_path","id","character","src","alt","Loader","searchParams","URLSearchParams","api_key","axios","getMovie","data","getMovieById","getCastById","getReviewsById","getMoviesByQuery","query"],"sourceRoot":""}