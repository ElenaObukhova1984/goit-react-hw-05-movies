{"version":3,"file":"static/js/485.c84b89a5.chunk.js","mappings":"uSAEaA,EAAQC,EAAAA,GAAAA,EAAH,gHAOLC,EAAOD,EAAAA,GAAAA,GAAH,6CAIJE,EAAOF,EAAAA,GAAAA,GAAH,uE,kBCqCjB,EA1Ca,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,sGAEEH,GAAa,GAFf,SAG4BI,EAAAA,KAH5B,gBAGUC,EAHV,EAGUA,QACRP,GAAU,OAAIO,IACdL,GAAa,GALf,kDAQEM,EAAAA,GAAAA,MAAY,sCARd,2DADY,uBAAC,WAAD,wBAadC,EACD,GAAE,KAGD,gCACGR,IAAc,SAACS,EAAA,EAAD,KACf,SAAChB,EAAD,8BACA,SAACE,EAAD,UACGG,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACR,SAAChB,EAAD,WACE,SAAC,KAAD,CAAMiB,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMb,GAA1C,SACGS,KAFMC,EADH,OAQd,SAAC,KAAD,MAGL,C,+LC5CKI,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAQ,mCAAG,sGACCD,EAAAA,EAAAA,IAAA,sCAAyCD,IAD1C,uBACdG,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qDAKRC,EAAY,mCAAG,WAAMR,GAAN,yFACHK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,oBAAkCI,IAD/B,uBAClBG,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZE,EAAW,mCAAG,WAAMT,GAAN,yFACFK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,4BAA0CI,IADxC,uBACjBG,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXG,EAAc,mCAAG,WAAMV,GAAN,yFACLK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,4BAA0CI,IADrC,uBACpBG,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAgB,mCAAG,WAAMC,GAAN,yFACPP,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,4DAA8FQ,IADvF,uBACtBL,EADsB,EACtBA,KADsB,kBAGvBA,GAHuB,2CAAH,qD","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.p`\n  margin-bottom: 10px;\n  margin-left: 15px;\n  font-size: 25px;\n  font-weight: bold;\n`;\n\nexport const List = styled.ul`\n padding-left:30px;\n`;\n\nexport const Item = styled.li`\n  font-size: 14px;\n  margin-bottom: 5px;\n  \n`;","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport * as moviesAPI from 'service/api';\nimport { Title, List, Item } from './Home.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n      async function getMovies() {\n      try {\n        setIsLoading(true);\n        const { results } = await moviesAPI.getMovie();\n        setMovies([...results]);\n        setIsLoading(false);\n       \n      } catch (error) {\n        toast.error('Oops! Not found! Please try again!');\n             }\n    }\n\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading &&  <Loader/>} \n      <Title>Trending today</Title>\n      <List>\n        {movies.map(({ title, id }) => (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </Item>\n          ))}\n      </List>\n      <Toaster/>\n    </>\n  );\n};\n\n\n\nexport default Home;","import axios from \"axios\";\n\nconst API_KEY = 'ee39ca8cad92a8b09ec7ae8a83a29296';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getMovie = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data;\n};"],"names":["Title","styled","List","Item","useState","movies","setMovies","isLoading","setIsLoading","location","useLocation","useEffect","moviesAPI","results","toast","getMovies","Loader","map","title","id","to","state","from","API_KEY","axios","getMovie","data","getMovieById","getCastById","getReviewsById","getMoviesByQuery","query"],"sourceRoot":""}